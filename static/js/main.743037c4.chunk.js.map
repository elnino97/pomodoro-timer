{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","playAudio","audio","play","volume","incrementBreak","state","breakLength","setState","decrementBreak","incrementSession","sessionLength","minutes","decrementSession","startTimer","status","interval","setInterval","tick","clearInterval","seconds","break","resetTimer","pause","currentTime","className","handleIncrement","this","handleDecrement","reset","time","id","ref","src","React","Component","BreakLength","onClick","SessionLength","Timer","toString","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.743037c4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      minutes: 25,\n      seconds: 0,\n      status: \"off\",\n      break: false\n    }\n  }\n  playAudio = () => {\n    this.audio.play();\n    this.audio.volume = 0.5;\n  }\n  incrementBreak = () => {\n    if (this.state.breakLength < 60) this.setState({ breakLength: this.state.breakLength + 1 })\n  }\n  decrementBreak = () => {\n    if (this.state.breakLength > 1) this.setState({ breakLength: this.state.breakLength - 1 })\n  }\n  incrementSession = () => {\n    if (this.state.sessionLength < 60) this.setState({ \n      sessionLength: this.state.sessionLength + 1,\n      minutes: this.state.minutes + 60 / 60\n    })\n  }\n  decrementSession = () => {\n    if (this.state.sessionLength > 1) this.setState({ \n      sessionLength: this.state.sessionLength - 1, \n      minutes: this.state.minutes - 60 / 60\n    })\n  }\n  startTimer = () => {\n    if (this.state.status !== \"on\"){\n      let interval = setInterval(() => this.tick(), 1000);\n      this.setState({status: \"on\", interval: interval})\n    } else if (this.state.status === \"on\"){\n      clearInterval(this.state.interval);\n      this.setState({ status: \"off\" })\n    }\n  }\n  tick = () => {   \n    if (this.state.status === \"on\"){\n      if ((this.state.minutes === 0 && this.state.seconds === 0) || this.state.minutes < 0){\n        if (this.state.break){\n          this.setState({\n          break: false,\n          minutes: this.state.sessionLength,\n          seconds: 0\n        })\n        this.playAudio();\n        } else {\n          this.setState({\n            minutes: this.state.breakLength,\n            seconds: 0,\n            break: true\n          })\n          this.playAudio();\n        }\n      } else if (this.state.seconds === 0){\n        this.setState({      \n          minutes: this.state.minutes - 1,\n          seconds: 59\n        }); \n      } else {\n        this.setState({\n         seconds: this.state.seconds - 1\n        })\n      }\n    } \n  }\n  resetTimer = () => {\n    clearInterval(this.state.interval)\n    this.setState({\n      status: \"off\",\n      break: false,\n      breakLength: 5,\n      sessionLength: 25,\n      minutes: 25,\n      seconds: 0\n    })\n    this.audio.pause();\n    this.audio.currentTime = 0;\n  }\n  render(){\n    return (\n      <div className=\"container\">\n          <div className=\"App\">\n\n            <div className=\"title\">\n              <h2>Pomodoro Timer</h2>\n            </div>\n            <div className=\"time-control\">\n              <BreakLength \n                    handleIncrement={this.incrementBreak}\n                    handleDecrement={this.decrementBreak}\n                    breakLength={this.state.breakLength}\n                />\n                <SessionLength \n                    handleIncrement={this.incrementSession}\n                    handleDecrement={this.decrementSession}\n                    sessionLength={this.state.sessionLength}\n                />\n            </div>\n              <Timer \n                  startTimer={this.startTimer}\n                  reset={this.resetTimer}\n                  time={this.state.time}\n                  minutes={this.state.minutes}\n                  seconds={this.state.seconds}\n                  break={this.state.break}/>\n              <audio \n                  id=\"beep\"\n                  ref={ref => this.audio = ref}\n                  src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\">\n              </audio>\n            </div>\n          <div>Coded by Aidas Kairys</div>\n      </div>\n    );\n  }\n}\n\nclass BreakLength extends React.Component {\n  render(){\n    return (\n      <div className=\"break-container\">\n        <div id=\"break-label\">Break Length</div>\n        <div className=\"break-control\">\n          <button onClick={this.props.handleIncrement} id=\"break-increment\">+</button>\n          <div id=\"break-length\">\n            {this.props.breakLength}\n          </div>\n          <button onClick={this.props.handleDecrement} id=\"break-decrement\">-</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass SessionLength extends React.Component {\n  render(){\n    return (\n      <div className=\"session-container\">\n        <div id=\"session-label\">Session Length</div>\n        <div className=\"session-control\">\n          <button onClick={this.props.handleIncrement} id=\"session-increment\">+</button>\n          <div id=\"session-length\">\n            {this.props.sessionLength}\n          </div>\n          <button onClick={this.props.handleDecrement} id=\"session-decrement\">-</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  render(){\n    return (\n      <div className=\"timer\">\n            <div id=\"timer-label\">{this.props.break ? \"Break\" : \"Session\"}</div>\n          <div id=\"time-left\" className=\"time\">{this.props.minutes.toString().length === 1 \n          ? \"0\" + this.props.minutes.toString() \n          : this.props.minutes}:{this.props.seconds.toString().length === 1 \n          ? \"0\" + this.props.seconds.toString() \n          : this.props.seconds}</div>\n        <div className=\"start-stop-wrapper\">\n          <button id=\"start_stop\" onClick={this.props.startTimer}>Start/Stop</button>\n          <button id=\"reset\" onClick={this.props.reset}>Reset</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}